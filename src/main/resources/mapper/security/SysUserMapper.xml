<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.firstmetcs.springbootsecurityoauth.dao.security.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.firstmetcs.springbootsecurityoauth.model.security.SysUser">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="USER_EMAIL" jdbcType="VARCHAR" property="userEmail" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="INS_USER_ID" jdbcType="VARCHAR" property="insUserId" />
    <result column="INS_DTTM" jdbcType="TIMESTAMP" property="insDttm" />
    <result column="UPD_USER_ID" jdbcType="VARCHAR" property="updUserId" />
    <result column="UPD_DTTM" jdbcType="TIMESTAMP" property="updDttm" />
  </resultMap>
  <resultMap id="JoinResultMap" type="com.firstmetcs.springbootsecurityoauth.model.security.SysUser">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="USER_EMAIL" jdbcType="VARCHAR" property="userEmail" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <collection property="roleList" ofType="com.firstmetcs.springbootsecurityoauth.model.security.SysRole">
      <id column="ROLE_ID" jdbcType="INTEGER" property="id" />
      <result column="ROLE_CODE" jdbcType="VARCHAR" property="code" />
      <result column="ROLE_NAME" jdbcType="VARCHAR" property="name" />
      <result column="ROLE_STATUS" jdbcType="INTEGER" property="status" />
      <result column="ROLE_REMARK" jdbcType="VARCHAR" property="remark" />
      <collection property="routeList" ofType="com.firstmetcs.springbootsecurityoauth.model.security.SysRoute">
        <id column="ROUTE_ID" jdbcType="INTEGER" property="id" />
        <result column="ROUTE_CODE" jdbcType="VARCHAR" property="code" />
        <result column="ROUTE_NAME" jdbcType="VARCHAR" property="name" />
        <result column="ROUTE_PATH" jdbcType="VARCHAR" property="path" />
        <result column="ROUTE_ICON" jdbcType="VARCHAR" property="icon" />
        <result column="ROUTE_HIDE_IN_MENU" jdbcType="INTEGER" property="hideInMenu" />
        <result column="ROUTE_PID" jdbcType="INTEGER" property="pid" />
        <collection property="apiList" ofType="com.firstmetcs.springbootsecurityoauth.model.security.SysApi">
          <id column="API_ID" jdbcType="INTEGER" property="id" />
          <result column="API_CODE" jdbcType="VARCHAR" property="code" />
          <result column="API_NAME" jdbcType="VARCHAR" property="name" />
          <result column="API_DESCRIPTION" jdbcType="VARCHAR" property="description" />
          <result column="API_URL" jdbcType="VARCHAR" property="url" />
          <result column="API_METHOD" jdbcType="VARCHAR" property="method" />
          <result column="API_STATUS" jdbcType="INTEGER" property="status" />
          <result column="API_REMARK" jdbcType="VARCHAR" property="remark" />
        </collection>
      </collection>
      <collection property="permissionList" ofType="com.firstmetcs.springbootsecurityoauth.model.security.SysPermission">
        <id column="PERMISSION_ID" jdbcType="INTEGER" property="id" />
        <result column="PERMISSION_CODE" jdbcType="VARCHAR" property="code" />
        <result column="PERMISSION_NAME" jdbcType="VARCHAR" property="name" />
        <result column="PERMISSION_STATUS" jdbcType="INTEGER" property="status" />
        <result column="PERMISSION_REMARK" jdbcType="VARCHAR" property="remark" />
        <collection property="apiList" ofType="com.firstmetcs.springbootsecurityoauth.model.security.SysApi">
          <id column="PAPI_ID" jdbcType="INTEGER" property="id" />
          <result column="PAPI_CODE" jdbcType="VARCHAR" property="code" />
          <result column="PAPI_NAME" jdbcType="VARCHAR" property="name" />
          <result column="PAPI_DESCRIPTION" jdbcType="VARCHAR" property="description" />
          <result column="PAPI_URL" jdbcType="VARCHAR" property="url" />
          <result column="PAPI_METHOD" jdbcType="VARCHAR" property="method" />
          <result column="PAPI_STATUS" jdbcType="INTEGER" property="status" />
          <result column="PAPI_REMARK" jdbcType="VARCHAR" property="remark" />
        </collection>
      </collection>
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    ID, USER_ID, USER_NAME, USER_EMAIL, PASSWORD, STATUS, REMARK,
    INS_USER_ID, INS_DTTM, UPD_USER_ID, UPD_DTTM
  </sql>
  <sql id="Join_Column_List">
    su.ID, su.USER_ID, su.USER_NAME, su.USER_EMAIL, su.PASSWORD, su.STATUS, su.REMARK,
    sr.ID ROLE_ID, sr.CODE ROLE_CODE, sr.NAME ROLE_NAME, sr.STATUS ROLE_STATUS, sr.REMARK ROLE_REMARK,
    srt.ID ROUTE_ID, srt.CODE ROUTE_CODE, srt.NAME ROUTE_NAME, srt.PATH ROUTE_PATH, srt.ICON ROUTE_ICON, srt.HIDE_IN_MENU ROUTE_HIDE_IN_MENU, srt.PID ROUTE_PID,
    sap.ID API_ID, sap.CODE API_CODE, sap.NAME API_NAME, sap.DESCRIPTION API_DESCRIPTION, sap.URL API_URL, sap.METHOD API_METHOD, sap.STATUS API_STATUS, sap.REMARK API_REMARK,
    spe.ID PERMISSION_ID, spe.CODE PERMISSION_CODE, spe.NAME PERMISSION_NAME, spe.STATUS PERMISSION_STATUS, spe.REMARK PERMISSION_REMARK,
    spap.ID PAPI_ID, spap.CODE PAPI_CODE, spap.NAME PAPI_NAME, spap.DESCRIPTION PAPI_DESCRIPTION, spap.URL PAPI_URL, spap.METHOD PAPI_METHOD, spap.STATUS PAPI_STATUS, spap.REMARK PAPI_REMARK
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from SYS_USER
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from SYS_USER
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.firstmetcs.springbootsecurityoauth.model.security.SysUser">
    insert into SYS_USER (ID, USER_ID,
      USER_NAME, USER_EMAIL,
      PASSWORD, STATUS, REMARK,
      INS_USER_ID, INS_DTTM, UPD_USER_ID,
      UPD_DTTM)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR},
      #{userName,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR},
      #{insUserId,jdbcType=VARCHAR}, #{insDttm,jdbcType=TIMESTAMP}, #{updUserId,jdbcType=VARCHAR},
      #{updDttm,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.firstmetcs.springbootsecurityoauth.model.security.SysUser">
    insert into SYS_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="userEmail != null">
        USER_EMAIL,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="insUserId != null">
        INS_USER_ID,
      </if>
      <if test="insDttm != null">
        INS_DTTM,
      </if>
      <if test="updUserId != null">
        UPD_USER_ID,
      </if>
      <if test="updDttm != null">
        UPD_DTTM,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="insUserId != null">
        #{insUserId,jdbcType=VARCHAR},
      </if>
      <if test="insDttm != null">
        #{insDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="updUserId != null">
        #{updUserId,jdbcType=VARCHAR},
      </if>
      <if test="updDttm != null">
        #{updDttm,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.firstmetcs.springbootsecurityoauth.model.security.SysUser">
    update SYS_USER
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        USER_EMAIL = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="insUserId != null">
        INS_USER_ID = #{insUserId,jdbcType=VARCHAR},
      </if>
      <if test="insDttm != null">
        INS_DTTM = #{insDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="updUserId != null">
        UPD_USER_ID = #{updUserId,jdbcType=VARCHAR},
      </if>
      <if test="updDttm != null">
        UPD_DTTM = #{updDttm,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.firstmetcs.springbootsecurityoauth.model.security.SysUser">
    update SYS_USER
    set USER_ID = #{userId,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      USER_EMAIL = #{userEmail,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      REMARK = #{remark,jdbcType=VARCHAR},
      INS_USER_ID = #{insUserId,jdbcType=VARCHAR},
      INS_DTTM = #{insDttm,jdbcType=TIMESTAMP},
      UPD_USER_ID = #{updUserId,jdbcType=VARCHAR},
      UPD_DTTM = #{updDttm,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectWithRoleAndPermission" resultMap="JoinResultMap">
    select
    <include refid="Join_Column_List" />
    from SYS_USER su
    left join SYS_USER_ROLE sur on su.ID = sur.USER_ID
    left join SYS_ROLE sr on sur.ROLE_ID = sr.ID
    left join SYS_ROLE_ROUTE srr on srr.ROLE_ID = sr.ID
    left join SYS_ROUTE srt on srr.ROUTE_ID = srt.ID
    left join SYS_ROUTE_API srap on srt.ID = srap.ROUTE_ID
    left join SYS_API sap on srap.API_ID = sap.ID
  </select>
  <select id="findByUserName" parameterType="java.lang.String" resultMap="JoinResultMap">
    select
    <include refid="Join_Column_List" />
    from SYS_USER su
    left join SYS_USER_ROLE sur on su.ID = sur.USER_ID
    left join SYS_ROLE sr on sur.ROLE_ID = sr.ID
    left join SYS_ROLE_ROUTE srr on srr.ROLE_ID = sr.ID
    left join SYS_ROUTE srt on srr.ROUTE_ID = srt.ID
    left join SYS_ROUTE_API srap on srt.ID = srap.ROUTE_ID
    left join SYS_API sap on srap.API_ID = sap.ID
    left join SYS_ROLE_PERMISSION srpe on sr.ID = srpe.ROLE_ID
    left join SYS_PERMISSION spe on srpe.PERMISSION_ID = spe.ID
    left join SYS_PERMISSION_API spa on spa.PERMISSION_ID = spe.ID
    left join SYS_API spap on spa.API_ID = spap.ID
    where su.USER_ID = #{userId,jdbcType=VARCHAR}
  </select>
</mapper>